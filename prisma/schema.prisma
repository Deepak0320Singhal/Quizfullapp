generator client {
  provider = "prisma-client-js"
}

// This is for supabase DB (ONLINE)
datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}
        


// This is for local db (DEEPAK)
// datasource db {
//   provider = "postgresql"
//   url      = env("DATABASE_URL")
// }

// model User{
//   id Int @id @default(autoincrement())
//   name String
//   email String @unique
//   created_at DateTime @default(now())
// }


model class6math{
  id Int @id @default(autoincrement())  
  qno Int
  question String
  optiona String
  optionb String
  optionc String
  optiond String
  answer String
  explaination String
  toughness String
  topic String
}
model class6science{
  id Int @id @default(autoincrement())  
  qno Int
  question String
  optiona String
  optionb String
  optionc String
  optiond String
  answer String
  explaination String
  toughness String
  topic String
}

model class6socialscience{
  id Int @id @default(autoincrement())  
  qno Int
  question String
  optiona String
  optionb String
  optionc String
  optiond String
  answer String
  explaination String
  toughness String
  topic String
}

model class7science{
  id Int @id @default(autoincrement())  
  qno Int
  question String
  optiona String
  optionb String
  optionc String
  optiond String
  answer String
  explaination String
  toughness String
  topic String
}

model class7math{
  id Int @id @default(autoincrement())  
  qno Int
  question String
  optiona String
  optionb String
  optionc String
  optiond String
  answer String
  explaination String
  toughness String
  topic String
}

model curriculum {
  id          Int    @id @default(autoincrement()) // Unique ID for each record
  className   String // Class name (e.g., "Class 6")
  subjectName String // Subject name (e.g., "Mathematics")
  topicName   String // Topic name (e.g., "Algebra")

  @@unique([className, subjectName, topicName]) // Ensure no duplicate entries for the same class, subject, and topic
}